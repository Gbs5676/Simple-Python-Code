class Enemy:
    """Represents a game enemy with name, health, attack, and defense attributes."""

    def __init__(self, name: str, health: int, attack: int, defense: int):
        """
        Initialize enemy with the given name, health, attack, and defense attributes.

        :param name: Name of the enemy.
        :param health: Current health of the enemy (must be positive).
        :param attack: Attack power of the enemy (must be positive).
        :param defense: Defense power of the enemy (must be non-negative).
        """
        if health <= 0:
            raise ValueError("Health must be positive.")
        if attack <= 0:
            raise ValueError("Attack must be positive.")
        if defense < 0:
            raise ValueError("Defense must be non-negative.")

        self.name = name
        self.health = health
        self.attack = attack
        self.defense = defense

    def take_damage(self, damage: int):
        """
        Apply damage to the enemy's health.

        :param damage: Amount of damage to apply.
        """
        if damage < 0:
            raise ValueError("Damage must be non-negative.")

        self.health -= damage

    def attack_player(self, player):
        """
        Attack a player by calculating damage dealt and applying it to the player's health.

        :param player: Player to attack.
        """
        damage_dealt = self.attack - player.defense
        if damage_dealt > 0:
            player.take_damage(damage_dealt)
            print(f"{self.name} atacou {player.name} e causou {damage_dealt} de dano.")
        else:
            print(f"{self.name} atacou {player.name}, mas o ataque n√£o causou dano.")

    def is_alive(self):
        """
        Check if
